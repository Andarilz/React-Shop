import React from 'react'
import {connect} from 'react-redux'
import {getCategories, getActiveCategoryId} from 'Selectors'
import {Link} from 'react-router-dom'
import {withRouter} from 'react-router'
import {compose} from 'redux'
import classNames from 'classnames'
import * as R from 'ramda'

const Categories = ({categories, activeCategoryId}) => {

  const getActiveState = R.propEq('id', activeCategoryId) //находим соответствие айдишнику роута и текущей итерации списка категорий

  const renderCategorie = (category, index) => {

    const linkClass = classNames({
      'list-group-item': true,
      'active': getActiveState(category) //задаем класс при соответствии роута и текущей итерации
    })

    return ( //выводим ссылки на роуты категорий
      <Link
      to={`/categories/${category.id}`}
      className={linkClass}
      key={index}
      >
        {category.name}
      </Link>
    )
  }

  const renderAllCategory = () => { //задаем активные классы при перемещении между категориями
    const linkClass = classNames({
      'list-group-item': true,
      'active': R.isNil(activeCategoryId)
    })

    return (
      <Link
        to={`/`}
        className={linkClass}
      >
        All
      </Link>
    )
  }

  return (
    <div className='well'>
      <h4>Brand</h4>
      <div className='list-group'>
        {renderAllCategory()}
        {categories.map((categorie, index) => renderCategorie(categorie, index))}
      </div>
    </div>
  )
}

const mapStateToProps = (state, ownProps) => ({
  categories: getCategories(state), //получаем категории
  activeCategoryId: getActiveCategoryId(ownProps) //получаем роут-айдишник
})

// export default connect(mapStateToProps, null)(Categories)

export default compose( //комбинируем обертки для редакса (connect) и роутов для функционального компонента withRouter для получения пропсов
  withRouter,
  connect(mapStateToProps, null)
)(Categories)